@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  /* Card dimensions for consistent sizing across components */
  --card-width: 130px; /* Optimized for battlefield display */
  --card-height: 185px; /* Proportionally sized */
  --battlefield-card-scale: 1.5; /* Increased scale for better visibility on battlefield */
  --card-margin: 4px; /* Standard margin to prevent overlap */
  --grid-gap: 6px; /* Consistent grid gap */
  
  /* Premium Hearthstone-style color palette */
  --primary-gold: #FFD700; /* Metallic gold */
  --secondary-grey: #4A4A4A; /* Dark grey */
  --glow-yellow: #FFF3D4; /* Soft yellow glow */
  --shadow-black: rgba(0, 0, 0, 0.4); /* Shadow with 40% opacity */
  --game-bg-color: #92400e; /* Amber-900 color for main game background */
  
  /* Advanced Norse themed variables (preserved for backward compatibility) */
  --norse-primary: #92400e; /* Changed from blue to amber for consistency */
  --norse-secondary: #78350f; /* Darker amber */
  --norse-accent: #FFD700; /* Updated to match golden primary */
  --norse-text: #f3f4f6;
  --norse-border: #9ca3af;
  
  /* UI scaling and layout variables */
  --reference-width: 1920px;
  --reference-height: 1080px;
  --opponent-area-height: 15%;
  --battlefield-height: 75%;  /* Increased from 65% to give more battlefield space */
  --player-area-height: 10%;  /* Reduced from 20% to minimize deadspace */
  
  /* Z-index layers for proper stacking */
  --z-background: 0;
  --z-board: 10;
  --z-cards: 20;
  --z-active-card: 30;
  --z-ui: 40;
  --z-modal: 50;
  --z-tooltip: 60;
  --z-notification: 70;
  
  /* Card glow effects - centralized for consistent styling */
  --card-playable-glow: 0 0 15px rgba(120, 255, 120, 0.8), 0 0 30px rgba(0, 255, 0, 0.4);
  --card-targetable-glow: 0 0 15px rgba(255, 120, 120, 0.8), 0 0 30px rgba(255, 0, 0, 0.4);
  --card-highlighted-glow: 0 0 15px rgba(255, 255, 120, 0.8), 0 0 30px rgba(255, 255, 0, 0.4);
  --card-legendary-glow: 0 0 25px rgba(255, 215, 0, 0.7), 0 0 10px rgba(255, 215, 0, 0.4);
  --card-epic-glow: 0 0 25px rgba(163, 53, 238, 0.7), 0 0 10px rgba(163, 53, 238, 0.4);
  --card-standard-glow: 0 0 25px rgba(0, 112, 221, 0.7), 0 0 10px rgba(0, 112, 221, 0.4);
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
    margin: 0;
    padding: 0;
    overflow: visible; /* Changed from hidden to visible to prevent card clipping */
    width: 100vw;
    height: 100vh;
  }
}

#root {
  width: 100%;
  height: 100%;
  position: fixed;
}

canvas {
  width: 100% !important;
  height: 100% !important;
  touch-action: none;
}

/* ZZZ Sleeping Animation Keyframes */
@keyframes float {
  0%, 100% { transform: translateY(0) rotate(-5deg); }
  50% { transform: translateY(-8px) rotate(-5deg); }
}

@keyframes pulse {
  0%, 100% { transform: scale(1); opacity: 1; }
  50% { transform: scale(1.05); opacity: 0.9; }
}

@keyframes bubbleFloat {
  0%, 100% { transform: translateY(0); opacity: 0.8; }
  50% { transform: translateY(-5px); opacity: 1; }
}

@keyframes zzzFloat {
  0%, 100% { transform: translateY(0) scale(1); }
  50% { transform: translateY(-3px) scale(1.1); }
}

/* Combat Animation Keyframes */
@keyframes screenShake {
  0%, 100% { transform: translate(0, 0); }
  10% { transform: translate(-5px, -5px); }
  20% { transform: translate(5px, 5px); }
  30% { transform: translate(-3px, 3px); }
  40% { transform: translate(3px, -3px); }
  50% { transform: translate(-2px, -2px); }
  60% { transform: translate(2px, 2px); }
  70% { transform: translate(-1px, 1px); }
  80% { transform: translate(1px, -1px); }
  90% { transform: translate(-1px, -1px); }
}

@keyframes spellFlash {
  0% { filter: brightness(1); }
  50% { filter: brightness(1.3); }
  100% { filter: brightness(1); }
}

/* Screen shake and spell cast effect classes */
.screen-shake-impact {
  animation: screenShake 0.5s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;
}

.spell-cast-flash {
  animation: spellFlash 0.3s ease-in-out;
}

/* Card sizing and dimensions for consistent appearance */
.card-with-drag {
  min-width: var(--card-width);
  min-height: var(--card-height);
  transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  
  /* Premium 3D effects */
  transform-style: preserve-3d;
  perspective: 1000px;
  z-index: 30;
  will-change: transform, box-shadow;
}

/* Apply optimal scale to battlefield cards */
.battlefield-card .card-with-drag {
  transform: scale(var(--battlefield-card-scale)) !important;
}

/* Subtle card hover effects */
@keyframes card-hover-glow {
  0% {
    box-shadow: 0 0 8px rgba(255, 215, 0, 0.3);
  }
  50% {
    box-shadow: 0 0 12px rgba(255, 215, 0, 0.5);
  }
  100% {
    box-shadow: 0 0 8px rgba(255, 215, 0, 0.3);
  }
}

/* REMOVED: Card hover effect styling is now fully managed by CardTransformationManager */
/* This comment kept as documentation of where the styling was previously defined */

/* State-based card classes for hover and drag states */
.card-with-drag.is-hovering {
  /* Glow effects temporarily disabled to isolate hover issues */
  box-shadow: none !important;
  filter: brightness(1.1) !important; /* Keep slight brightness for feedback */
}

.card-with-drag.is-dragging {
  /* No transitions during dragging for responsiveness */
  transition: none !important;
  /* Removed box-shadow to eliminate unwanted outline when dragging */
  box-shadow: none !important;
  /* Still allow the CardDragAnimation component to handle transform */
}

/* Make sure parent container on hover increases its z-index */
.card-hover-parent:hover {
  z-index: 1000 !important; /* Match the card z-index */
}

/* Special class for cards being dragged */
.hand-card-dragging {
  z-index: 2000 !important; /* Even higher than hover state */
  pointer-events: none; /* Prevent hover effects during drag */
}

/* 
 * Special class for cards being played/placed on the battlefield 
 * NOTE: This style has been moved to CardTransformationManager.ts
 * and is kept here only as a fallback
 */
.card-being-played {
  z-index: 3000 !important; /* Higher than dragging for the placement animation */
  transition: transform 0.4s cubic-bezier(0.11, 0.65, 0.33, 1.5), 
              box-shadow 0.3s cubic-bezier(0.2, 0.8, 0.2, 1.2) !important;
  box-shadow: 
    0 0 40px rgba(70, 130, 255, 0.9),
    0 0 20px rgba(220, 255, 250, 1),
    0 0 60px rgba(30, 100, 255, 0.7) !important;
  pointer-events: none; /* Prevent any interactions during placement animation */
  animation: card-play-pulse 0.6s ease-in-out !important;
}

/* Special animation for the card placement pulse */
@keyframes card-play-pulse {
  0% { transform: scale(1.2); filter: brightness(1); }
  50% { transform: scale(1.35); filter: brightness(1.5); }
  100% { transform: scale(1.2); filter: brightness(1); }
}

/* Battlefield card holographic effects */
@keyframes prismatic-shift {
  0% { filter: hue-rotate(0deg) saturate(1.5); }
  25% { filter: hue-rotate(90deg) saturate(1.8); }
  50% { filter: hue-rotate(180deg) saturate(2); }
  75% { filter: hue-rotate(270deg) saturate(1.8); }
  100% { filter: hue-rotate(360deg) saturate(1.5); }
}

@keyframes shine-gold {
  0% { background-position: 0% 0%; }
  25% { background-position: 100% 0%; }
  50% { background-position: 100% 100%; }
  75% { background-position: 0% 100%; }
  100% { background-position: 0% 0%; }
}

/* Holographic effect classes */
.epic-holographic {
  background-size: 200% 200%;
  animation: prismatic-shift 5s infinite linear;
  position: absolute;
  inset: 0;
  z-index: 50;
  pointer-events: none;
  mix-blend-mode: color-dodge;
}

.legendary-holographic {
  background-size: 150% 150%;
  animation: shine-gold 3s ease infinite;
  position: absolute;
  inset: 0;
  z-index: 50;
  pointer-events: none;
  mix-blend-mode: color-dodge;
}

/* Special animation for the card damage shake */
@keyframes damage-shake {
  0% { transform: translate(0, 0) rotate(0deg); }
  25% { transform: translate(-2px, 1px) rotate(-1deg); }
  50% { transform: translate(0, -2px) rotate(0.5deg); }
  75% { transform: translate(2px, 1px) rotate(1deg); }
  100% { transform: translate(0, 0) rotate(0deg); }
}

/* Size overrides for hand and battlefield positions */
.in-hand .card-with-drag {
  width: var(--card-width);
  height: var(--card-height);
}

/* Ensure premium card containers match the new dimensions */
.premium-card-container {
  width: 100%;
  height: 100%;
}

/* Taunt styling with border on the card frame */
.taunt-frame::before {
  content: '';
  position: absolute;
  inset: -5px;
  background: linear-gradient(135deg, #8B4513, #A0522D, #D2691E, #8B4513);
  z-index: -1;
  border-radius: 15px;
  opacity: 0.75;
  filter: blur(3px);
}

/* Tooltip styles for keyword icons */
.tooltip {
  position: relative;
  display: inline-block;
}

.tooltip .tooltiptext {
  visibility: hidden;
  width: 120px;
  background-color: rgba(0, 0, 0, 0.8);
  color: #fff;
  text-align: center;
  border-radius: 6px;
  padding: 5px;
  position: absolute;
  z-index: 100;
  bottom: 125%;
  left: 50%;
  margin-left: -60px;
  opacity: 0;
  transition: opacity 0.3s;
  font-size: 12px;
  pointer-events: none;
}

.tooltip .tooltiptext::after {
  content: "";
  position: absolute;
  top: 100%;
  left: 50%;
  margin-left: -5px;
  border-width: 5px;
  border-style: solid;
  border-color: rgba(0, 0, 0, 0.8) transparent transparent transparent;
}

.tooltip:hover .tooltiptext {
  visibility: visible;
  opacity: 1;
}

/* Game UI Architecture - Layout System */

/* Virtual Canvas Scaler: Maintains aspect ratio across devices */
.virtual-canvas-scaler {
  position: relative;
  width: 100%;
  height: 100%;
  overflow: visible; /* Changed from hidden to visible to prevent card clipping */
  transform-origin: top left;
}

/* Game grid container: Divides the space into logical zones */
.game-grid-container {
  display: grid;
  width: 100%;
  height: 100vh;
  grid-template-rows: 15% 75% 10%; /* Updated layout to match new CSS variables */
  overflow: visible; /* Changed from hidden to visible for proper card display */
  /* Dynamic width - allow game to use full screen width */
  max-width: 100vw;
  padding: 0;
  margin: 0 auto;
}

/* Game area sections with proper heights */
.opponent-area, .opponent-section {
  width: 100%;
  height: 100%;
  position: relative;
  grid-row: 1;
  min-height: 15vh; /* Updated to match new CSS variable */
  overflow: visible;
  /* No horizontal padding to maximize width */
  padding: 0.5rem 0;
  box-sizing: border-box;
}

.battlefield-area, .battlefield-container {
  width: 100%;
  max-width: 100%;
  height: 100%;
  position: relative;
  grid-row: 2;
  display: flex;
  flex-direction: column;
  justify-content: center;
  min-height: 75vh; /* Updated to match new CSS variable */
  overflow: visible;
  box-sizing: border-box;
  padding: 0; /* Remove padding completely to maximize width */
}

.player-area, .player-section {
  width: 100%;
  height: 100%;
  position: relative;
  grid-row: 3;
  min-height: 10vh; /* Updated to match new CSS variable */
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  overflow: visible;
  /* No horizontal padding to maximize width */
  padding: 0.5rem 0;
  box-sizing: border-box;
}

/* Game board container with flexbox layout */
.game-board {
  display: flex;
  flex-direction: column;
  height: 100%;
  width: 100%;
  position: relative;
  overflow: visible; /* Changed from hidden to visible to prevent card clipping */
  /* Optimize for widescreen displays */
  max-width: 100vw;
  margin: 0 auto;
}

/* Game Log with fixed height to prevent layout shifts */
.game-log-container {
  min-height: 150px;
  max-height: 150px;
  overflow-y: auto;
  background-color: rgba(0, 0, 0, 0.6);
  border-radius: 8px;
  border: 1px solid var(--norse-accent);
  padding: 8px;
}

/* Empty log placeholder to maintain height */
.game-log-empty {
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  color: rgba(255, 255, 255, 0.3);
  font-style: italic;
}

/* Z-index hierarchy for proper stacking */
.z-index-base { z-index: 1; }
.z-index-cards { z-index: 10; }
.z-index-active-card { z-index: 20; }
.z-index-ui { z-index: 30; }
.z-index-overlay { z-index: 40; }
.z-index-modal { z-index: 50; }
.z-index-tooltip { z-index: 60; }

/* Advanced holographic card effects */
.holographic-card {
  position: relative;
  transform-style: preserve-3d;
  transition: transform 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.holographic-card::before {
  content: '';
  position: absolute;
  inset: 0;
  background: linear-gradient(
    135deg,
    rgba(255, 255, 255, 0.1),
    rgba(255, 215, 0, 0.2),
    rgba(255, 255, 255, 0.1),
    rgba(255, 215, 0, 0.2)
  );
  background-size: 400% 400%;
  animation: holographic-shimmer 6s infinite linear;
  border-radius: inherit;
  pointer-events: none;
  z-index: 2;
}

@keyframes holographic-shimmer {
  0% { background-position: 0% 0%; }
  100% { background-position: 400% 400%; }
}

/* Grid spacing and alignment utilities */
.battlefield-spacing {
  padding: 1rem;
  gap: 1rem;
}

.game-area-padding {
  padding: 0.75rem;
}

.card-area-gap {
  gap: 0.5rem;
}

/* GameAreaContainer styles - enforces proper game area proportions */
.game-area-container {
  position: relative;
  width: 100%;
  overflow: visible;
  box-sizing: border-box;
}

.game-area-container.opponent-area {
  height: var(--opponent-area-height);
  background-color: rgba(139, 0, 0, 0.05);
  margin-top: 180px; /* Increased margin to move battlefield down further (was 96px) */
}

.game-area-container.battlefield-area {
  height: var(--battlefield-height);
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.game-area-container.player-area {
  height: var(--player-area-height);
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  background-color: rgba(0, 100, 0, 0.05);
}

/* Battlefield card layout classes */
.opponent-battlefield-zone, .player-battlefield-zone {
  display: flex;
  flex-direction: column;
  align-items: center;
  position: relative;
  padding: 0.25rem;
  transition: all 0.3s ease;
  width: 100%;
  max-width: 100%;
  box-sizing: border-box;
  /* Set a responsive width that scales with view size */
  width: 90vw;
  max-width: 1600px;
  margin: 0 auto;
  
  /* Responsive sizing for different screen sizes */
  @media (min-width: 1600px) {
    width: 75vw;
  }
  
  @media (max-width: 768px) {
    width: 95vw;
  }
}

/* Battlefield styling - centralized definitions */
/* Base styling variables for battlefield zones */
:root {
  /* Opponent zone styling */
  --opponent-zone-bg: rgba(139, 0, 0, 0.05);
  --opponent-zone-border: rgba(139, 0, 0, 0.1);
  --opponent-zone-shadow: rgba(139, 0, 0, 0.1);
  --opponent-zone-height: 160px;
  
  /* Player zone styling */
  --player-zone-bg: rgba(0, 100, 0, 0.05);
  --player-zone-border: rgba(0, 100, 0, 0.1);
  --player-zone-shadow: rgba(0, 100, 0, 0.1);
  --player-zone-height: 180px;
  
  /* Shared battlefield styling */
  --battlefield-border-radius: 8px;
  --battlefield-shadow-intensity: 10px;
  --battlefield-border-width: 1px;
  
  /* Interactive state colors */
  --battlefield-highlight-color: rgba(255, 215, 0, 0.3);
  --battlefield-targeting-ring-width: 2px;
}

/* Adaptive battlefield scaling based on number of minions */
/* Base styling for all battlefield card configurations */
.opponent-cards, .player-cards {
  --base-gap: 10px;
  --card-scale: 0.8;
  /* Removed conflict between this gap and the gap in the card container selection below */
  /* This ensures consistent card spacing on the battlefield */
  gap: var(--base-gap);
}

/* Progressive scaling for different numbers of cards */
.card-container[data-card-count="4"] {
  --card-scale: 0.75;
  --base-gap: 8px;
}

.card-container[data-card-count="5"] {
  --card-scale: 0.7;
  --base-gap: 6px;
}

.card-container[data-card-count="6"] {
  --card-scale: 0.65;
  --base-gap: 4px;
}

.card-container[data-card-count="7"] {
  --card-scale: 0.58;
  --base-gap: 2px;
}

/* Apply consistent spacing regardless of card count */
.card-container > div {
  margin: 0 !important;
  padding: 0 !important;
  transform-origin: center center;
}

/* Battlefield zone styling - consolidated from multiple places */
.opponent-battlefield-zone {
  background-color: var(--opponent-zone-bg);
  min-height: var(--opponent-zone-height);
  border: var(--battlefield-border-width) solid var(--opponent-zone-border);
  border-radius: var(--battlefield-border-radius);
  margin-bottom: 4px;
  box-shadow: inset 0 0 var(--battlefield-shadow-intensity) var(--opponent-zone-shadow);
  width: 95vw; /* Wider battlefield */
  max-width: 1800px; /* Increased from 1600px */
  margin-left: auto;
  margin-right: auto;
}

.player-battlefield-zone {
  background-color: var(--player-zone-bg);
  min-height: var(--player-zone-height);
  border: var(--battlefield-border-width) solid var(--player-zone-border);
  border-radius: var(--battlefield-border-radius);
  margin-top: 0;
  box-shadow: inset 0 0 var(--battlefield-shadow-intensity) var(--player-zone-shadow);
  transition: all 0.3s ease;
  width: 95vw; /* Wider battlefield */
  max-width: 1800px; /* Increased from 1600px */
  margin-left: auto;
  margin-right: auto;
}

/* Targeting state styles moved from inline to CSS */
/* Container-level targeting indicators */
.battlefield-targeting-hero-power {
  ring: var(--battlefield-targeting-ring-width) rgb(147, 51, 234);
}

.battlefield-targeting-battlecry {
  ring: var(--battlefield-targeting-ring-width) rgb(234, 179, 8);
}

/* Card-level targeting indicators */
.card-targeting-hero-power {
  ring: 2px solid rgb(147, 51, 234);
}

.card-targeting-battlecry {
  ring: 2px solid rgb(234, 179, 8);
}

.card-targeting-attack {
  ring: 2px solid rgb(234, 179, 8);
}

.card-attacking {
  ring: 4px solid rgb(249, 115, 22);
}

/* Battlefield drag target states */
.drag-target-active {
  background-color: rgba(0, 100, 0, 0.15);
  border: 2px dashed rgba(0, 200, 0, 0.5);
  box-shadow: inset 0 0 15px rgba(0, 200, 0, 0.2), 0 0 20px rgba(0, 200, 0, 0.1);
}

/* Visual indicator when dragging over battlefield */
.player-battlefield-zone.drag-target-active {
  background-color: rgba(0, 100, 0, 0.15);
  border: 2px dashed rgba(0, 200, 0, 0.5);
  box-shadow: inset 0 0 15px rgba(0, 200, 0, 0.2), 0 0 20px rgba(0, 200, 0, 0.1);
}

/* Battlefield card styles */
.battlefield-card {
  transform-origin: center center;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.4);
  max-width: calc(100% - var(--card-margin) * 2);
  box-sizing: border-box;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 5px;
  overflow: visible;
  /* Center in the grid cell */
  margin: 0 auto;
  /* Ensure cards appear above background */
  position: relative;
  z-index: 40; 
  transition: transform 0.3s ease, filter 0.2s ease;
}

.zone-header {
  width: 100%;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
  letter-spacing: 0.05em;
}

/* Card container with responsive dynamic layout */
.card-container {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  min-height: 180px; /* Increased height for more visibility */
  width: 100%;
  max-width: 100%;
  align-items: center;
  padding: 4px;
  margin: 0 auto;
  box-sizing: border-box;
  overflow: visible;
  position: relative;
  z-index: 20; /* Higher than background, lower than cards */
  
  /* Responsive scaling for different screen widths */
  max-width: 95vw; /* Increased from 90% to 95% */
  
  /* Scale up for larger screens */
  @media (min-width: 1200px) {
    max-width: 85vw; /* Increased from 75% to 85% */
  }
  
  /* Scale down for smaller screens */
  @media (max-width: 768px) {
    max-width: 95vw;
  }
}

/* Individual card slots within the flex container */
.card-container > div {
  display: flex;
  justify-content: center;
  align-items: center;
  min-width: 100px; /* Minimum width to ensure visibility */
  height: 100%;
  transition: transform 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  margin: 0 var(--card-margin);
  box-sizing: border-box;
  position: relative;
  /* Ensure cards don't overlap with each other */
  overflow: visible;
  /* Auto-scaling margin based on card count */
  flex: 0 0 auto;
  z-index: 30; /* Ensure individual card containers stack properly */
}

.opponent-cards, .player-cards {
  display: flex;
  flex-wrap: nowrap; /* Prevent cards from wrapping to new lines */
  justify-content: center;
  align-items: center;
  border-radius: 8px;
  padding: 0.25rem;
  width: 100%;
  max-width: 100%;
  overflow: visible; /* No scrolling */
  
  /* Hearthstone-style curved card arrangement */
  transform-style: preserve-3d;
  perspective: 1200px;
  position: relative;
  
  /* Original gap setting - maintain the gap between minions */
  gap: 0;
  
  /* Each card container receives a negative margin to create overlap ONLY FOR HAND */
  /* Card containers will have special styling for fan arrangement */
  & > div {
    margin: 0 -15px; /* Pronounced overlap like Hearthstone battlefield */
    transform-origin: center bottom;
    transition: transform 0.2s ease-out;
    position: relative;
    /* Cards elevate on hover - Hearthstone uses subtle lifting */
    &:hover {
      transform: translateY(-8px) scale(1.1);
      z-index: 100 !important; /* Ensure hovered card is on top */
    }
  }
}

/* Apply curvature to battlefield rows */
.opponent-cards {
  min-height: 140px; /* Reduced height for opponent cards */
  transform: perspective(1000px) rotateX(2deg); /* Subtle curve for opponent area */
}

.player-cards {
  min-height: 180px; /* Maintain height for player cards */
  position: relative;
  margin-top: -88px; /* Move cards up by approximately 7/6 inch (increased by another 1/3 inch) */
  /* Removed top: -50px to avoid conflict with hand-container bottom positioning */
  transform: perspective(1000px) rotateX(-2deg); /* Subtle curve for player area */
}

/* Keep the background colors */
.opponent-cards {
  background-color: rgba(139, 0, 0, 0.1);
}

.player-cards {
  background-color: rgba(0, 100, 0, 0.1);
}

.empty-battlefield-message {
  background: rgba(30, 30, 30, 0.5);
  border: 1px solid rgba(255, 215, 0, 0.2);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

.empty-battlefield {
  min-height: 80px;
  width: 100%;
}

.opponent-hero-container, .player-hero-container {
  position: relative;
  margin-top: 0.5rem;
}

.opponent-hero-portrait, .player-hero-portrait {
  position: relative;
  transition: all 0.3s ease;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
}

.hero-label {
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.7);
}

/* Hand card styles */
.hand-card-container {
  transform-origin: center bottom;
  transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  /* Card margin is now managed directly in the component's inline style */
  /* This ensures the poker-hand overlap is consistent */
  position: relative;
  /* Adding perspective for better 3D effects */
  perspective: 1200px;
  padding: 0; /* No padding for tightest possible arrangement */
}



/* REMOVED: CSS hover state handling
   All hover effects are now managed through the CardTransformationManager
   and React state in the SimpleHolographicCard component.
   
   This eliminates conflicts between CSS and JavaScript hover states
   that were causing the visual artifacts.
*/

/* Class that will be applied by JS when a card is hovered */
.card-js-hover {
  position: relative;
  z-index: 1000 !important;
  /* We'll let the CardTransformationManager apply all transforms */
}

/* New contained glow effect that doesn't leak outside card boundaries */
/* Add a class with a pseudo-element for contained card glow */
.card-container-glow {
  position: relative;
  box-shadow: none !important; /* Remove any existing box-shadow */
  overflow: visible !important; /* Allow the glow to extend beyond the card */
}

/* Completely disabled pseudo-element to remove the unwanted border */
.card-container-glow::before {
  content: none; /* Remove the element completely */
  display: none; /* Ensure it's not displayed */
}

/* Enhanced animation for contained glow with scale effect */
@keyframes contained-glow-pulse {
  0% { opacity: 0.5; transform: scale(0.98); }
  50% { opacity: 0.8; transform: scale(1.02); }
  100% { opacity: 0.5; transform: scale(0.98); }
}

/* Responsive hover settings are now handled by CardTransformationManager
   The media query CSS hover effects have been completely removed
   to prevent conflicts with the React state management system.
*/

/* Class for cards actively being dragged - separate from hover */
.hand-card-dragging {
  z-index: 2000; /* Even higher than hover state */
  transition: none; /* No transition while dragging for responsiveness */
  pointer-events: auto;
}

.hand-container {
  padding-bottom: 0; /* No bottom padding needed - cards are lifted by transform */
  width: 95vw; /* Increased to match battlefield width */
  max-width: 1800px; /* Increased to match battlefield width */
  margin: 0 auto;
  overflow: visible;
  position: absolute; /* Position absolutely to allow precise placement */
  bottom: 150px; /* Adjusted further to match the lowered battlefield */
  transform: translateY(0px) !important; /* No additional transform needed */
  z-index: 80; /* Higher z-index to ensure cards appear above the battlefield */
  
  /* Responsive sizing for different screen sizes */
  @media (min-width: 1600px) {
    width: 85vw; /* Increased from 75% to 85% */
    bottom: 160px; /* Adjusted for larger screens */
  }
  
  @media (max-width: 768px) {
    width: 95vw;
    bottom: 140px; /* Adjusted for smaller screens */
  }
  
  /* Different heights for different viewport heights */
  @media (min-height: 900px) {
    bottom: 170px; /* Adjusted for taller screens */
  }
  
  @media (max-height: 700px) {
    bottom: 130px; /* Adjusted for shorter screens */
  }
}

/* Enhanced Card Drag and Placement Animations */

/* Define consistent card scales for hand and battlefield */
:root {
  --hand-card-scale: 0.5;      /* Scale for cards in hand */
  --battlefield-card-scale: 0.7; /* Scale for cards on battlefield */
  --dragging-card-scale: 0.6;   /* Intermediate scale while dragging */
}

/* Elegant card falling animation when a card is placed on battlefield */
@keyframes elegant-card-fall {
  0% { 
    transform: translateY(-20px) scale(var(--dragging-card-scale)) rotate(0deg);
    box-shadow: 0 0 40px rgba(70, 130, 255, 0.9);
  }
  30% { 
    transform: translateY(10px) scale(calc(var(--battlefield-card-scale) * 1.15)) rotate(2deg);
  }
  45% { 
    transform: translateY(-5px) scale(calc(var(--battlefield-card-scale) * 1.1)) rotate(-1deg);
  }
  60% { 
    transform: translateY(3px) scale(calc(var(--battlefield-card-scale) * 1.05)) rotate(1deg);
  }
  75% { 
    transform: translateY(-2px) scale(calc(var(--battlefield-card-scale) * 1.02)) rotate(-0.5deg);
  }
  100% { 
    transform: translateY(0) scale(var(--battlefield-card-scale)) rotate(0);
    box-shadow: none;
  }
}

/* Specific class for cards being dragged from hand to battlefield */
.card-dragging {
  cursor: grabbing !important;
  will-change: transform; /* Performance optimization */
  transition: none !important; /* Disable transitions for responsiveness */
  transform-origin: center center;
  z-index: 1000 !important; /* Use a high z-index during drag */
  /* Use intermediate scale to smooth transition between hand and battlefield */
  transform: scale(var(--dragging-card-scale)) !important;
}

/* Handling the card being played state */
.card-being-played {
  pointer-events: none;
  will-change: transform;
  z-index: 1000; /* Consistent high z-index value */
  transform: scale(var(--dragging-card-scale)) !important; /* Use consistent scale */
}

/* Visual indicator when cards are over valid drop zones */
.valid-drop-zone {
  outline: 2px dashed rgba(0, 255, 0, 0.5);
  outline-offset: 5px;
  transition: outline 0.2s ease-in-out;
}

/* CSS for card release animations */
.card-release-to-hand {
  animation: card-snap-back 0.3s cubic-bezier(0.22, 1, 0.36, 1) forwards;
}

.card-place-on-battlefield {
  animation: elegant-card-fall 0.6s cubic-bezier(0.2, 0.8, 0.2, 1) forwards;
}

/* Quick snap back animation when card returns to hand */
@keyframes card-snap-back {
  0% {
    transform: translate(0, 0) scale(var(--dragging-card-scale)) rotate(0deg);
  }
  20% {
    transform: translate(0, 0) scale(calc(var(--hand-card-scale) * 1.05)) rotate(-2deg);
  }
  60% {
    transform: translate(0, 0) scale(calc(var(--hand-card-scale) * 1.02)) rotate(1deg);
  }
  100% {
    transform: translate(0, 0) scale(var(--hand-card-scale)) rotate(0deg);
  }
}

/* Right-click animation */
.card-right-click-return {
  animation: right-click-pop 0.25s cubic-bezier(0.22, 1, 0.36, 1) forwards;
}

@keyframes right-click-pop {
  0% {
    transform: scale(1.15);
    opacity: 1;
  }
  50% {
    transform: scale(0.95);
    opacity: 0.9;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}